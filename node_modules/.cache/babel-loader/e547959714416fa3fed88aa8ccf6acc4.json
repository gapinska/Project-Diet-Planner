{"ast":null,"code":"import _slicedToArray from \"/home/monika/Pulpit/gapinska git/Project SPA/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/monika/Pulpit/gapinska git/Project SPA/src/contexts/UserContext.js\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport { fetchUser } from '../services/UserService';\nimport { useAuth } from '../hooks/useAuth';\nexport const UserContext = createContext();\nexport function UserProvider(props) {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const isLoggedIn = useAuth();\n  useEffect(() => {\n    if (!isLoggedIn) {\n      return;\n    }\n\n    fetchUser().then(user => {\n      setUser(user);\n    });\n  }, [isLoggedIn]);\n  return React.createElement(UserContext.Provider, Object.assign({\n    value: user\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), props.children);\n}","map":{"version":3,"sources":["/home/monika/Pulpit/gapinska git/Project SPA/src/contexts/UserContext.js"],"names":["React","createContext","useEffect","useState","fetchUser","useAuth","UserContext","UserProvider","props","user","setUser","isLoggedIn","then","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAGL,aAAa,EAAjC;AAEP,OAAO,SAASM,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,oBACVL,QAAQ,EADE;AAAA;AAAA,QAC3BM,IAD2B;AAAA,QACrBC,OADqB;;AAElC,QAAMC,UAAU,GAAGN,OAAO,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACS,UAAL,EAAiB;AACf;AACD;;AAEDP,IAAAA,SAAS,GAAGQ,IAAZ,CAAiBH,IAAI,IAAI;AACvBC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAFD;AAGD,GARQ,EAQN,CAACE,UAAD,CARM,CAAT;AAUA,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEF;AAA7B,KAAuCD,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGA,KAAK,CAACK,QADT,CADF;AAKD","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\nimport { fetchUser } from '../services/UserService'\nimport { useAuth } from '../hooks/useAuth'\n\nexport const UserContext = createContext()\n\nexport function UserProvider(props) {\n  const [user, setUser] = useState()\n  const isLoggedIn = useAuth()\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      return\n    }\n\n    fetchUser().then(user => {\n      setUser(user)\n    })\n  }, [isLoggedIn])\n\n  return (\n    <UserContext.Provider value={user} {...props}>\n      {props.children}\n    </UserContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}