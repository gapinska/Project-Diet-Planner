{"ast":null,"code":"var _jsxFileName = \"/home/monika/Pulpit/gapinska git/Project SPA/src/Components/meal/MealCardFull.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Meal.css\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport Paper from \"material-ui/Paper\";\nimport { PlanConsumer } from \"../../contexts/PlanContext.js\";\nimport { Button } from \"semantic-ui-react\";\nimport { Icon } from \"semantic-ui-react\";\nlibrary.add(faPlus);\nlibrary.add(faArrowLeft);\nexport function MealCardFull(props) {\n  const meal = props.meal,\n        canAddMeal = props.canAddMeal,\n        _props$isCalendarVari = props.isCalendarVariant,\n        isCalendarVariant = _props$isCalendarVari === void 0 ? false : _props$isCalendarVari;\n\n  if (!meal) {\n    return null;\n  }\n\n  const name = meal.name,\n        time = meal.time,\n        image = meal.image,\n        kcal = meal.kcal,\n        nutritions = meal.nutritions,\n        recipe = meal.recipe,\n        ingradients = meal.ingradients;\n  const fat = nutritions.fat,\n        carbs = nutritions.carbs,\n        protein = nutritions.protein;\n  return React.createElement(PlanConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, value => {\n    if (value.filteredMeals.length === 0 && !isCalendarVariant) {\n      return null;\n    } else {\n      return React.createElement(Paper, {\n        zDepth: 3,\n        className: \"mealCardFull\",\n        onClick: props.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mealCardTop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mealCardFullInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \" \", name, \" \"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Calories: \", kcal, \" kcal\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Prep Time: \", time, \" min \"), canAddMeal && React.createElement(Button, {\n        color: \"teal\",\n        style: {\n          width: \"120px\",\n          margin: \"10px 10px 10px 20px\"\n        },\n        className: \"addMealButton\",\n        onClick: () => value.addOrRemoveMeal(meal, true),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"ADD +\")), React.createElement(\"div\", {\n        className: \"mealCardFullHeart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        size: \"large\",\n        color: \"red\",\n        name: value.favouritesMeals.includes(meal) ? \"heart\" : \"heart outline\",\n        onClick: () => value.addToFavouritesMeals(meal),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"img\", {\n        className: \"mealPhoto\",\n        src: image,\n        alt: \"tu jest tekst\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mealCardMain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mealCardMainLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"nutritions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Nutritions\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"fat: \", fat, \"g\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \" carbs: \", carbs, \"g \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"protein: \", protein, \"g \")), React.createElement(\"div\", {\n        className: \"ingradients\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Ingradients:\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, ingradients.map((ingradient, index) => React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, ingradient))))), React.createElement(\"div\", {\n        className: \"recipe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \" Recipe\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, recipe))), React.createElement(\"div\", {\n        className: \"mealCardFooter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }));\n    }\n  });\n}\nMealCardFull.propTypes = {\n  canAddMeal: PropTypes.bool\n};\nMealCardFull.defaultProps = {\n  canAddMeal: true\n};","map":{"version":3,"sources":["/home/monika/Pulpit/gapinska git/Project SPA/src/Components/meal/MealCardFull.js"],"names":["React","PropTypes","library","faPlus","faArrowLeft","Paper","PlanConsumer","Button","Icon","add","MealCardFull","props","meal","canAddMeal","isCalendarVariant","name","time","image","kcal","nutritions","recipe","ingradients","fat","carbs","protein","value","filteredMeals","length","onClick","width","margin","addOrRemoveMeal","favouritesMeals","includes","addToFavouritesMeals","map","ingradient","index","propTypes","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Meal.css\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport Paper from \"material-ui/Paper\";\nimport { PlanConsumer } from \"../../contexts/PlanContext.js\";\nimport { Button } from \"semantic-ui-react\";\nimport { Icon } from \"semantic-ui-react\";\n\nlibrary.add(faPlus);\nlibrary.add(faArrowLeft);\n\nexport function MealCardFull(props) {\n  const { meal, canAddMeal, isCalendarVariant = false } = props;\n  if (!meal) {\n    return null;\n  }\n  const { name, time, image, kcal, nutritions, recipe, ingradients } = meal;\n  const { fat, carbs, protein } = nutritions;\n\n  return (\n    <PlanConsumer>\n      {value => {\n        if (value.filteredMeals.length === 0 && !isCalendarVariant) {\n          return null;\n        } else {\n          return (\n            <Paper zDepth={3} className=\"mealCardFull\" onClick={props.onClick}>\n              <div className=\"mealCardTop\">\n                <div className=\"mealCardFullInfo\">\n                  <h1> {name} </h1>\n                  <h2>Calories: {kcal} kcal</h2>\n                  <h2>Prep Time: {time} min </h2>\n                  {canAddMeal && (\n                    <Button\n                      color=\"teal\"\n                      style={{ width: \"120px\", margin: \"10px 10px 10px 20px\" }}\n                      className=\"addMealButton\"\n                      onClick={() => value.addOrRemoveMeal(meal, true)}\n                    >\n                      ADD +\n                    </Button>\n                  )}\n                </div>\n                <div className=\"mealCardFullHeart\">\n                  <Icon\n                    size=\"large\"\n                    color=\"red\"\n                    name={\n                      value.favouritesMeals.includes(meal)\n                        ? \"heart\"\n                        : \"heart outline\"\n                    }\n                    onClick={() => value.addToFavouritesMeals(meal)}\n                  />\n                </div>\n\n                <img className=\"mealPhoto\" src={image} alt={\"tu jest tekst\"} />\n              </div>\n\n              <div className=\"mealCardMain\">\n                <div className=\"mealCardMainLeft\">\n                  <div className=\"nutritions\">\n                    <h3>Nutritions</h3>\n                    <p>fat: {fat}g</p>\n                    <p> carbs: {carbs}g </p>\n                    <p>protein: {protein}g </p>\n                  </div>\n                  <div className=\"ingradients\">\n                    <h3>Ingradients:</h3>\n                    <ul>\n                      {ingradients.map((ingradient, index) => (\n                        <li key={index}>{ingradient}</li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n\n                <div className=\"recipe\">\n                  <h3> Recipe</h3>\n                  <p>{recipe}</p>\n                </div>\n              </div>\n              <div className=\"mealCardFooter\" />\n            </Paper>\n          );\n        }\n      }}\n    </PlanConsumer>\n  );\n}\n\nMealCardFull.propTypes = {\n  canAddMeal: PropTypes.bool\n};\n\nMealCardFull.defaultProps = {\n  canAddMeal: true\n};\n"]},"metadata":{},"sourceType":"module"}