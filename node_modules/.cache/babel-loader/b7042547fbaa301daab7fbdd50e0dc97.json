{"ast":null,"code":"import _slicedToArray from \"/home/monika/Pulpit/gapinska git/Project SPA/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/monika/Pulpit/gapinska git/Project SPA/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/monika/Pulpit/gapinska git/Project SPA/src/Components/meal/MealsList.js\";\nimport React, { useState, useRef } from 'react';\nimport { MealCardFull } from './MealCardFull';\nimport Slider from 'react-slick';\nimport Paper from 'material-ui/Paper';\nimport { PlanConsumer } from '../../contexts/PlanContext.js';\nimport { MealCardShort2 } from './MealCardShort';\nimport { Icon } from 'semantic-ui-react';\nimport { MotivationView } from '../MotivationView/MotivationView';\nimport { NoMealsInfo } from '../NoMealsInfo/NoMealsInfo';\nconst settings = {\n  className: 'center carousel-container',\n  centerMode: true,\n  infinite: true,\n  speed: 250,\n  nextArrow: React.createElement(SampleNextArrow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }),\n  prevArrow: React.createElement(SamplePrevArrow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }),\n  transform: true\n};\n\nfunction SampleNextArrow(props) {\n  const onClick = props.onClick,\n        style = props.style;\n  return React.createElement(Icon, {\n    style: _objectSpread({}, style, {\n      position: 'absolute',\n      zIndex: '1',\n      top: '50%',\n      right: '-30px',\n      cursor: 'pointer'\n    }),\n    name: \"angle double right\",\n    size: \"large\",\n    color: \"teal\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  });\n}\n\nfunction SamplePrevArrow(props) {\n  const onClick = props.onClick,\n        style = props.style;\n  return React.createElement(Icon, {\n    style: _objectSpread({}, style, {\n      position: 'absolute',\n      zIndex: '1',\n      top: '50%',\n      left: '-30px',\n      cursor: 'pointer'\n    }),\n    name: \"angle double left\",\n    size: \"large\",\n    color: \"teal\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  });\n}\n\nexport function MealsList() {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        choosenMeal = _useState2[0],\n        setchoosenMeal = _useState2[1];\n\n  const carousel = useRef();\n  return React.createElement(PlanConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, value => {\n    if (value.filteredMeals.length === 0) {\n      if (value.displayMotivationView) {\n        return React.createElement(MotivationView, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(NoMealsInfo, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n      }\n    } else {\n      return React.createElement(Paper, {\n        className: \"mealsList\",\n        zDepth: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        zDepth: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          textAlign: 'center',\n          textTransform: 'capitalize',\n          fontSize: '20px',\n          margin: '4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, value.mealFilter)), React.createElement(Slider, Object.assign({}, settings, {\n        slidesToShow: Math.min(value.filteredMeals.length, 3),\n        afterChange: index => {\n          setchoosenMeal(index);\n        },\n        ref: carousel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), value.filteredMeals.map((filteredMeal, index) => React.createElement(\"div\", {\n        style: {\n          maxWidth: '300px',\n          maxHeight: '350px'\n        },\n        key: index,\n        onClick: () => {\n          carousel.current.slickGoTo(index);\n          setchoosenMeal(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(MealCardShort2, {\n        key: filteredMeal.id,\n        meal: filteredMeal,\n        style: {\n          maxWidth: '300px',\n          maxHeight: '350px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(MealCardFull, {\n        meal: value.filteredMeals[choosenMeal],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })));\n    }\n  });\n}","map":{"version":3,"sources":["/home/monika/Pulpit/gapinska git/Project SPA/src/Components/meal/MealsList.js"],"names":["React","useState","useRef","MealCardFull","Slider","Paper","PlanConsumer","MealCardShort2","Icon","MotivationView","NoMealsInfo","settings","className","centerMode","infinite","speed","nextArrow","prevArrow","transform","SampleNextArrow","props","onClick","style","position","zIndex","top","right","cursor","SamplePrevArrow","left","MealsList","choosenMeal","setchoosenMeal","carousel","value","filteredMeals","length","displayMotivationView","textAlign","textTransform","fontSize","margin","mealFilter","Math","min","index","map","filteredMeal","maxWidth","maxHeight","current","slickGoTo","id"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\nimport { MealCardFull } from './MealCardFull'\nimport Slider from 'react-slick'\nimport Paper from 'material-ui/Paper'\nimport { PlanConsumer } from '../../contexts/PlanContext.js'\nimport { MealCardShort2 } from './MealCardShort'\nimport { Icon } from 'semantic-ui-react'\nimport { MotivationView } from '../MotivationView/MotivationView'\nimport { NoMealsInfo } from '../NoMealsInfo/NoMealsInfo'\n\nconst settings = {\n  className: 'center carousel-container',\n  centerMode: true,\n  infinite: true,\n  speed: 250,\n  nextArrow: <SampleNextArrow />,\n  prevArrow: <SamplePrevArrow />,\n  transform: true\n}\n\nfunction SampleNextArrow(props) {\n  const { onClick, style } = props\n  return (\n    <Icon\n      style={{\n        ...style,\n        position: 'absolute',\n        zIndex: '1',\n        top: '50%',\n        right: '-30px',\n        cursor: 'pointer'\n      }}\n      name='angle double right'\n      size='large'\n      color='teal'\n      onClick={onClick}\n    />\n  )\n}\n\nfunction SamplePrevArrow(props) {\n  const { onClick, style } = props\n  return (\n    <Icon\n      style={{\n        ...style,\n        position: 'absolute',\n        zIndex: '1',\n        top: '50%',\n        left: '-30px',\n        cursor: 'pointer'\n      }}\n      name='angle double left'\n      size='large'\n      color='teal'\n      onClick={onClick}\n    />\n  )\n}\n\nexport function MealsList() {\n  const [choosenMeal, setchoosenMeal] = useState(0)\n  const carousel = useRef()\n\n  return (\n    <PlanConsumer>\n      {value => {\n        if (value.filteredMeals.length === 0) {\n          if (value.displayMotivationView) {\n            return <MotivationView />\n          } else {\n            return <NoMealsInfo />\n          }\n        } else {\n          return (\n            <Paper className='mealsList' zDepth={0}>\n              <Paper zDepth={3}>\n                <h2\n                  style={{\n                    textAlign: 'center',\n                    textTransform: 'capitalize',\n                    fontSize: '20px',\n                    margin: '4px'\n                  }}>\n                  {value.mealFilter}\n                </h2>\n              </Paper>\n\n              <Slider\n                {...settings}\n                slidesToShow={Math.min(value.filteredMeals.length, 3)}\n                afterChange={index => {\n                  setchoosenMeal(index)\n                }}\n                ref={carousel}>\n                {value.filteredMeals.map((filteredMeal, index) => (\n                  <div\n                    style={{ maxWidth: '300px', maxHeight: '350px' }}\n                    key={index}\n                    onClick={() => {\n                      carousel.current.slickGoTo(index)\n                      setchoosenMeal(index)\n                    }}>\n                    <MealCardShort2\n                      key={filteredMeal.id}\n                      meal={filteredMeal}\n                      style={{ maxWidth: '300px', maxHeight: '350px' }}\n                    />\n                  </div>\n                ))}\n              </Slider>\n\n              <div>\n                <MealCardFull meal={value.filteredMeals[choosenMeal]} />\n              </div>\n            </Paper>\n          )\n        }\n      }}\n    </PlanConsumer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}