{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nexport const sendPlan = plan => {\n  if (plan === '') {\n    return;\n  }\n\n  const currentUser = firebase.auth().currentUser;\n  let userId;\n\n  if (currentUser != null) {\n    userId = currentUser.uid;\n  }\n\n  firebase.database().ref(\"plan/\".concat(userId)).set(plan);\n};\nexport const fetchPlan = (callback, uid) => {\n  const planRef = firebase.database().ref(\"plan/\".concat(uid));\n  planRef.on('value', snapshot => {\n    const plan = snapshot.val();\n\n    if (plan !== null) {\n      callback(plan);\n    } else {\n      callback({});\n    }\n  });\n  return planRef;\n};","map":{"version":3,"sources":["/home/monika/Pulpit/gapinska git/Project SPA/src/services/PlanService.js"],"names":["firebase","sendPlan","plan","currentUser","auth","userId","uid","database","ref","set","fetchPlan","callback","planRef","on","snapshot","val"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;AAEA,OAAO,MAAMC,QAAQ,GAAGC,IAAI,IAAI;AAC9B,MAAIA,IAAI,KAAK,EAAb,EAAiB;AACf;AACD;;AAED,QAAMC,WAAW,GAAGH,QAAQ,CAACI,IAAT,GAAgBD,WAApC;AACA,MAAIE,MAAJ;;AACA,MAAIF,WAAW,IAAI,IAAnB,EAAyB;AACvBE,IAAAA,MAAM,GAAGF,WAAW,CAACG,GAArB;AACD;;AAEDN,EAAAA,QAAQ,CACLO,QADH,GAEGC,GAFH,gBAEeH,MAFf,GAGGI,GAHH,CAGOP,IAHP;AAID,CAfM;AAiBP,OAAO,MAAMQ,SAAS,GAAG,CAACC,QAAD,EAAWL,GAAX,KAAmB;AAC1C,QAAMM,OAAO,GAAGZ,QAAQ,CAACO,QAAT,GAAoBC,GAApB,gBAAgCF,GAAhC,EAAhB;AAEAM,EAAAA,OAAO,CAACC,EAAR,CAAW,OAAX,EAAoBC,QAAQ,IAAI;AAC9B,UAAMZ,IAAI,GAAGY,QAAQ,CAACC,GAAT,EAAb;;AACA,QAAIb,IAAI,KAAK,IAAb,EAAmB;AACjBS,MAAAA,QAAQ,CAACT,IAAD,CAAR;AACD,KAFD,MAEO;AACLS,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GAPD;AASA,SAAOC,OAAP;AACD,CAbM","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\n\nexport const sendPlan = plan => {\n  if (plan === '') {\n    return\n  }\n\n  const currentUser = firebase.auth().currentUser\n  let userId\n  if (currentUser != null) {\n    userId = currentUser.uid\n  }\n\n  firebase\n    .database()\n    .ref(`plan/${userId}`)\n    .set(plan)\n}\n\nexport const fetchPlan = (callback, uid) => {\n  const planRef = firebase.database().ref(`plan/${uid}`)\n\n  planRef.on('value', snapshot => {\n    const plan = snapshot.val()\n    if (plan !== null) {\n      callback(plan)\n    } else {\n      callback({})\n    }\n  })\n\n  return planRef\n}\n"]},"metadata":{},"sourceType":"module"}