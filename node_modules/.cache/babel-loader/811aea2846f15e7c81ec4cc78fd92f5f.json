{"ast":null,"code":"var _jsxFileName = \"/home/monika/Pulpit/gapinska git/Project SPA/src/contexts/AuthContext.js\";\nimport React, { createContext } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nexport const AuthContext = createContext();\nexport class AuthProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoggedIn: null\n    };\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      const isLoggedIn = user ? true : false;\n      this.setState({\n        isLoggedIn\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(AuthContext.Provider, Object.assign({\n      value: this.state.isLoggedIn\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/monika/Pulpit/gapinska git/Project SPA/src/contexts/AuthContext.js"],"names":["React","createContext","firebase","AuthContext","AuthProvider","Component","state","isLoggedIn","componentDidMount","auth","onAuthStateChanged","user","setState","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AAEA,OAAO,MAAMC,WAAW,GAAGF,aAAa,EAAjC;AAEP,OAAO,MAAMG,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAChDC,KADgD,GACxC;AACNC,MAAAA,UAAU,EAAE;AADN,KADwC;AAAA;;AAKhDC,EAAAA,iBAAiB,GAAG;AAClBN,IAAAA,QAAQ,CAACO,IAAT,GAAgBC,kBAAhB,CAAmCC,IAAI,IAAI;AACzC,YAAMJ,UAAU,GAAGI,IAAI,GAAG,IAAH,GAAU,KAAjC;AAEA,WAAKC,QAAL,CAAc;AACZL,QAAAA;AADY,OAAd;AAGD,KAND;AAOD;;AAEDM,EAAAA,MAAM,GAAG;AACP,WAAO,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC;AAAxC,OAAwD,KAAKO,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAjB+C","sourcesContent":["import React, { createContext } from 'react'\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\n\nexport const AuthContext = createContext()\n\nexport class AuthProvider extends React.Component {\n  state = {\n    isLoggedIn: null\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      const isLoggedIn = user ? true : false\n\n      this.setState({\n        isLoggedIn\n      })\n    })\n  }\n\n  render() {\n    return <AuthContext.Provider value={this.state.isLoggedIn} {...this.props} />\n  }\n}\n"]},"metadata":{},"sourceType":"module"}