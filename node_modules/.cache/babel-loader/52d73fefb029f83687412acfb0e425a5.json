{"ast":null,"code":"var _jsxFileName = \"/home/monika/Pulpit/gapinska git/Project SPA/src/Components/Login.js\";\nimport React from 'react';\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom';\nimport { signIn } from '../services/AuthService';\nimport { useForm } from '../hooks/useForm';\nimport { useAuth } from '../hooks/useAuth';\n\nconst LoginForm = props => {\n  const isLoggedIn = useAuth();\n\n  const _useForm = useForm({\n    email: '',\n    password: ''\n  }),\n        state = _useForm.state,\n        handleChange = _useForm.handleChange;\n\n  if (isLoggedIn) {\n    const redirectUrl = props.location.state && props.location.state.from && props.location.state.from.pathname;\n    return React.createElement(Redirect, {\n      to: redirectUrl ? redirectUrl : '/',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Segment, {\n    placeholder: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    textAlign: \"center\",\n    style: {\n      height: '90vh'\n    },\n    verticalAlign: \"middle\",\n    columns: 2,\n    relaxed: \"very\",\n    stackable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    style: {\n      maxWidth: 450\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h2\",\n    color: \"teal\",\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Log-in to your account\"), React.createElement(Form, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"E-mail address\",\n    value: state.email,\n    name: 'email',\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    fluid: true,\n    icon: \"lock\",\n    iconPosition: \"left\",\n    placeholder: \"Password\",\n    type: \"password\",\n    value: state.password,\n    name: 'password',\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    onClick: () => {\n      signIn(state.email, state.password);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Login\"))), React.createElement(Grid.Column, {\n    verticalAlign: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h2\",\n    color: \"teal\",\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"New to us?\"), React.createElement(\"a\", {\n    href: \"/sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Button, {\n    content: \"Sign up\",\n    icon: \"signup\",\n    size: \"big\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/monika/Pulpit/gapinska git/Project SPA/src/Components/Login.js"],"names":["React","Button","Form","Grid","Header","Segment","Redirect","signIn","useForm","useAuth","LoginForm","props","isLoggedIn","email","password","state","handleChange","redirectUrl","location","from","pathname","height","maxWidth"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react'\nimport { Redirect } from 'react-router-dom'\nimport { signIn } from '../services/AuthService'\nimport { useForm } from '../hooks/useForm'\nimport { useAuth } from '../hooks/useAuth'\n\nconst LoginForm = props => {\n  const isLoggedIn = useAuth()\n  const { state, handleChange } = useForm({\n    email: '',\n    password: ''\n  })\n\n  if (isLoggedIn) {\n    const redirectUrl =\n      props.location.state && props.location.state.from && props.location.state.from.pathname\n\n    return <Redirect to={redirectUrl ? redirectUrl : '/'} />\n  }\n\n  return (\n    <Segment placeholder>\n      <Grid\n        textAlign='center'\n        style={{ height: '90vh' }}\n        verticalAlign='middle'\n        columns={2}\n        relaxed='very'\n        stackable>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            Log-in to your account\n          </Header>\n          <Form size='large'>\n            <Form.Input\n              fluid\n              icon='user'\n              iconPosition='left'\n              placeholder='E-mail address'\n              value={state.email}\n              name={'email'}\n              onChange={handleChange}\n            />\n            <Form.Input\n              fluid\n              icon='lock'\n              iconPosition='left'\n              placeholder='Password'\n              type='password'\n              value={state.password}\n              name={'password'}\n              onChange={handleChange}\n            />\n\n            <Button\n              color='teal'\n              fluid\n              size='large'\n              onClick={() => {\n                signIn(state.email, state.password)\n              }}>\n              Login\n            </Button>\n          </Form>\n        </Grid.Column>\n        <Grid.Column verticalAlign='middle'>\n          <Header as='h2' color='teal' textAlign='center'>\n            New to us?\n          </Header>\n          <a href='/sign-up'>\n            <Button content='Sign up' icon='signup' size='big' />\n          </a>\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  )\n}\n\nexport default LoginForm\n"]},"metadata":{},"sourceType":"module"}