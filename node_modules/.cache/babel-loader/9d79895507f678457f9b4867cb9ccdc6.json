{"ast":null,"code":"import _objectSpread from \"/home/monika/Pulpit/gapinska git/Project SPA/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/monika/Pulpit/gapinska git/Project SPA/src/Components/Calendar/Calendar.js\";\nimport React, { Fragment, Component } from \"react\";\nimport { PlanConsumer } from \"../../contexts/PlanContext\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport { withRouter } from \"react-router-dom\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"./custom-calendar.css\";\nimport events from \"../../events\";\nimport meals from \"../../meals.json\";\nimport Modal from \"react-modal\";\nimport { MealCardFull } from \"../meal/MealCardFull\";\nimport \"../meal/Meal.css\";\nconst localizer = momentLocalizer(moment);\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    border: \"none\",\n    borderRadius: \"10px\",\n    backgroundColor: \"rgb(128, 238, 210)\"\n  },\n  overlay: {\n    zIndex: 999\n  }\n};\n\nclass CalendarContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: events,\n      mealsList: {},\n      selectedEvent: events[0],\n      modalIsOpen: false,\n      currentMealId: 1\n    };\n\n    this.onSelect = (e, setSelectedDate) => {\n      setSelectedDate(moment(e.start));\n      this.props.history.push(\"plandiet\");\n    };\n\n    this.toggleModal = event => {\n      this.setState(_objectSpread({}, this.state, {\n        modalIsOpen: true,\n        currentMealId: event.id\n      }));\n    };\n\n    this.closeModal = () => {\n      this.setState(_objectSpread({}, this.state, {\n        modalIsOpen: false\n      }));\n    };\n\n    this.escFunction = event => {\n      if (event.keyCode === 27) {\n        this.closeModal();\n      }\n    };\n  }\n\n  componentDidMount() {\n    const mealsListState = {};\n    this.setState({\n      mealsList: mealsListState\n    });\n    document.addEventListener(\"keydown\", this.escFunction, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.escFunction, false);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(PlanConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, value => {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Calendar, {\n        selectable: true,\n        views: [\"month\", \"week\"],\n        onSelectSlot: e => {\n          this.onSelect(e, value.setSelectedDate);\n        },\n        onSelectEvent: this.toggleModal,\n        style: {\n          height: 800\n        },\n        localizer: localizer,\n        events: value.events,\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        isOpen: this.state.modalIsOpen,\n        style: customStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(MealCardFull, {\n        isCalendarVariant: true,\n        canAddMeal: false,\n        meal: meals.find(meal => meal.id === this.state.currentMealId),\n        onClick: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })));\n    }));\n  }\n\n}\n\nexport default withRouter(CalendarContainer);","map":{"version":3,"sources":["/home/monika/Pulpit/gapinska git/Project SPA/src/Components/Calendar/Calendar.js"],"names":["React","Fragment","Component","PlanConsumer","Calendar","momentLocalizer","moment","withRouter","events","meals","Modal","MealCardFull","localizer","customStyles","content","top","left","right","bottom","marginRight","transform","border","borderRadius","backgroundColor","overlay","zIndex","CalendarContainer","state","mealsList","selectedEvent","modalIsOpen","currentMealId","onSelect","e","setSelectedDate","start","props","history","push","toggleModal","event","setState","id","closeModal","escFunction","keyCode","componentDidMount","mealsListState","document","addEventListener","componentWillUnmount","removeEventListener","render","value","height","find","meal"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,mDAAP;AACA,OAAO,uBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,OAAO,kBAAP;AAEA,MAAMC,SAAS,GAAGP,eAAe,CAACC,MAAD,CAAjC;AAEA,MAAMO,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE,KADE;AAEPC,IAAAA,IAAI,EAAE,KAFC;AAGPC,IAAAA,KAAK,EAAE,MAHA;AAIPC,IAAAA,MAAM,EAAE,MAJD;AAKPC,IAAAA,WAAW,EAAE,MALN;AAMPC,IAAAA,SAAS,EAAE,uBANJ;AAOPC,IAAAA,MAAM,EAAE,MAPD;AAQPC,IAAAA,YAAY,EAAE,MARP;AASPC,IAAAA,eAAe,EAAE;AATV,GADU;AAYnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AADD;AAZU,CAArB;;AAiBA,MAAMC,iBAAN,SAAgCxB,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCyB,KADwC,GAChC;AACNnB,MAAAA,MAAM,EAAEA,MADF;AAENoB,MAAAA,SAAS,EAAE,EAFL;AAGNC,MAAAA,aAAa,EAAErB,MAAM,CAAC,CAAD,CAHf;AAINsB,MAAAA,WAAW,EAAE,KAJP;AAKNC,MAAAA,aAAa,EAAE;AALT,KADgC;;AAAA,SAexCC,QAfwC,GAe7B,CAACC,CAAD,EAAIC,eAAJ,KAAwB;AACjCA,MAAAA,eAAe,CAAC5B,MAAM,CAAC2B,CAAC,CAACE,KAAH,CAAP,CAAf;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACD,KAlBuC;;AAAA,SAoBxCC,WApBwC,GAoB1BC,KAAK,IAAI;AACrB,WAAKC,QAAL,mBACK,KAAKd,KADV;AAEEG,QAAAA,WAAW,EAAE,IAFf;AAGEC,QAAAA,aAAa,EAAES,KAAK,CAACE;AAHvB;AAKD,KA1BuC;;AAAA,SA4BxCC,UA5BwC,GA4B3B,MAAM;AACjB,WAAKF,QAAL,mBACK,KAAKd,KADV;AAEEG,QAAAA,WAAW,EAAE;AAFf;AAID,KAjCuC;;AAAA,SAmCxCc,WAnCwC,GAmC1BJ,KAAK,IAAI;AACrB,UAAIA,KAAK,CAACK,OAAN,KAAkB,EAAtB,EAA0B;AACxB,aAAKF,UAAL;AACD;AACF,KAvCuC;AAAA;;AAQxCG,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,cAAc,GAAG,EAAvB;AAEA,SAAKN,QAAL,CAAc;AAAEb,MAAAA,SAAS,EAAEmB;AAAb,KAAd;AACAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,KAAKL,WAA1C,EAAuD,KAAvD;AACD;;AA4BDM,EAAAA,oBAAoB,GAAG;AACrBF,IAAAA,QAAQ,CAACG,mBAAT,CAA6B,SAA7B,EAAwC,KAAKP,WAA7C,EAA0D,KAA1D;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,KAAK,IAAI;AACR,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,KAAK,EAAE,CAAC,OAAD,EAAU,MAAV,CAFT;AAGE,QAAA,YAAY,EAAEpB,CAAC,IAAI;AACjB,eAAKD,QAAL,CAAcC,CAAd,EAAiBoB,KAAK,CAACnB,eAAvB;AACD,SALH;AAME,QAAA,aAAa,EAAE,KAAKK,WANtB;AAOE,QAAA,KAAK,EAAE;AAAEe,UAAAA,MAAM,EAAE;AAAV,SAPT;AAQE,QAAA,SAAS,EAAE1C,SARb;AASE,QAAA,MAAM,EAAEyC,KAAK,CAAC7C,MAThB;AAUE,QAAA,aAAa,EAAC,OAVhB;AAWE,QAAA,WAAW,EAAC,KAXd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAeE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKmB,KAAL,CAAWG,WAA1B;AAAuC,QAAA,KAAK,EAAEjB,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,iBAAiB,MADnB;AAEE,QAAA,UAAU,EAAE,KAFd;AAGE,QAAA,IAAI,EAAEJ,KAAK,CAAC8C,IAAN,CACJC,IAAI,IAAIA,IAAI,CAACd,EAAL,KAAY,KAAKf,KAAL,CAAWI,aAD3B,CAHR;AAME,QAAA,OAAO,EAAE,KAAKY,UANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAfF,CADF;AA4BD,KA9BH,CADF,CADF;AAoCD;;AAlFuC;;AAqF1C,eAAepC,UAAU,CAACmB,iBAAD,CAAzB","sourcesContent":["import React, { Fragment, Component } from \"react\";\nimport { PlanConsumer } from \"../../contexts/PlanContext\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport { withRouter } from \"react-router-dom\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"./custom-calendar.css\";\nimport events from \"../../events\";\nimport meals from \"../../meals.json\";\nimport Modal from \"react-modal\";\nimport { MealCardFull } from \"../meal/MealCardFull\";\nimport \"../meal/Meal.css\";\n\nconst localizer = momentLocalizer(moment);\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    border: \"none\",\n    borderRadius: \"10px\",\n    backgroundColor: \"rgb(128, 238, 210)\"\n  },\n  overlay: {\n    zIndex: 999\n  }\n};\n\nclass CalendarContainer extends Component {\n  state = {\n    events: events,\n    mealsList: {},\n    selectedEvent: events[0],\n    modalIsOpen: false,\n    currentMealId: 1\n  };\n  componentDidMount() {\n    const mealsListState = {};\n\n    this.setState({ mealsList: mealsListState });\n    document.addEventListener(\"keydown\", this.escFunction, false);\n  }\n\n  onSelect = (e, setSelectedDate) => {\n    setSelectedDate(moment(e.start));\n    this.props.history.push(\"plandiet\");\n  };\n\n  toggleModal = event => {\n    this.setState({\n      ...this.state,\n      modalIsOpen: true,\n      currentMealId: event.id\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      ...this.state,\n      modalIsOpen: false\n    });\n  };\n\n  escFunction = event => {\n    if (event.keyCode === 27) {\n      this.closeModal();\n    }\n  };\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.escFunction, false);\n  }\n\n  render() {\n    return (\n      <div>\n        <PlanConsumer>\n          {value => {\n            return (\n              <Fragment>\n                <Calendar\n                  selectable={true}\n                  views={[\"month\", \"week\"]}\n                  onSelectSlot={e => {\n                    this.onSelect(e, value.setSelectedDate);\n                  }}\n                  onSelectEvent={this.toggleModal}\n                  style={{ height: 800 }}\n                  localizer={localizer}\n                  events={value.events}\n                  startAccessor=\"start\"\n                  endAccessor=\"end\"\n                />\n\n                <Modal isOpen={this.state.modalIsOpen} style={customStyles}>\n                  <MealCardFull\n                    isCalendarVariant\n                    canAddMeal={false}\n                    meal={meals.find(\n                      meal => meal.id === this.state.currentMealId\n                    )}\n                    onClick={this.closeModal}\n                  />\n                </Modal>\n              </Fragment>\n            );\n          }}\n        </PlanConsumer>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CalendarContainer);\n"]},"metadata":{},"sourceType":"module"}